{"version":3,"sources":["common/context.js","views/Page.js","views/PageWrapper.js","App.js","common/const.js","common/bookUtils.js","index.js"],"names":["React","createContext","Consumer","Provider","Page","props","bookList","FileIcon","style","backgroundColor","fontSize","color","icon","type","FolderIcon","genPathElm","item","children","path","split","pop","to","pathname","replace","label","href","itemLayout","dataSource","renderItem","isFolder","Item","Meta","avatar","title","description","PageWrapper","params","this","match","key","r","console","log","getBookList","bookMap","Component","App","className","component","basePath","cos","COS","SecretId","SecretKey","forward","files","source","idx","indexOf","folderName","slice","rear","file","find","fi","filter","join","push","encodeURI","bulidBookMap","_bulidBookMap","Array","isArray","forEach","Promise","resolve","reject","getBucket","Bucket","Region","err","data","fileList","Contents","i","length","Key","then","Root","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae7c6e11.chunk.js","sourcesContent":["import React from 'react'\nlet { Consumer, Provider } = React.createContext();\nexport {\n    Consumer,\n    Provider\n}","import { List, Avatar, Icon } from 'antd';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst Page = (props) => {\n    let { bookList } = props;\n\n    const FileIcon = <Avatar style={{ backgroundColor: 'transparent' , fontSize: '16px', color: '#08c' }} icon={<Icon type=\"file\"  />} />\n    const FolderIcon = <Avatar style={{ backgroundColor: 'transparent' , fontSize: '16px', color: '#08c' }} icon={<Icon type=\"folder\"  />} />\n\n    const genPathElm = function(item){\n        const isFolder = !!item.children;\n\n        if(isFolder){\n            const arr = item.path.split('/');\n            arr.pop();\n            return (\n                <Link  to={{ pathname:`/${item.path.replace(/\\//g,'@@@@')}`}}>{item.label}</Link>\n            )\n        }else{\n            return (\n                <a href={ item.path }>{item.label}</a>\n            )\n        }\n    }\n\n    return (\n        <div >\n            <List\n                itemLayout=\"horizontal\"\n                dataSource={bookList}\n                renderItem={item => {\n                    const isFolder = !!item.children;\n                    return (\n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={ isFolder ? FolderIcon  : FileIcon }\n                                title={genPathElm(item)}\n                                description=''\n                            />\n                        </List.Item>\n                    )\n                }}\n            />,\n\n\n\n        </div>\n    )\n}\n\nexport default Page;","import { Consumer } from '../common/context';\nimport Page from './Page';\nimport React from 'react';\n\n\n\n\nclass PageWrapper extends React.Component{\n    componentDidMount(){\n\n    }\n\n    render(){\n\n        const { params } = this.props.match;\n\n        let key = params && params.r ?  params.r : '';\n        key = key.replace(/@@@@/g,'/');\n\n        console.log(key)\n        \n        const getBookList = (bookList , bookMap)=>{\n            let obj = {};\n            if(key){\n                obj = bookMap[key].children\n            }else{\n                obj = bookList\n            }\n            return obj;\n        }\n\n\n\n        return (\n            <div>\n                <Consumer>\n                    {\n                        ({ bookList , bookMap }) => {\n                            return (\n                                <Page bookList={ getBookList(bookList , bookMap) }/>\n                            )\n                        }\n                    }\n                </Consumer>\n\n            </div>\n        )\n\n    }\n}\n\n\nexport default PageWrapper;\n\n","import React from 'react';\nimport { Router,  } from 'react-router'\nimport {HashRouter , Route , Switch} from 'react-router-dom';\n\n\nimport Page from './views/PageWrapper'\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n\n        <HashRouter  >\n          <Switch>\n            <Route path=\"/:r\" component={Page}></Route>\n            <Route path=\"/\" component={Page}></Route>\n          </Switch>\n\n        </HashRouter>\n\n\n      {/* <Page {...props}/> */}\n    </div>\n  );\n}\n\nexport default App;\n","\nexport const secretId   = 'AKIDoOVMwHFFVVH3ZbhTYMn1nJM8hrmQk35q';\nexport const secretKey  ='f6D7k8G9ICuWVEgtqY0DH5dvyvfDrNee';\nexport const bucket = 'book-1251784200';\nexport const region = 'ap-guangzhou';\nexport const basePath = `https://${bucket}.cos.${region}.myqcloud.com/`;\n// https://book-1251784200.cos.ap-guangzhou.myqcloud.com\n\n\n","import { secretId, secretKey, bucket, region , basePath} from './const';\nimport COS from 'cos-js-sdk-v5';\n\n\nconst cos = new COS({\n  SecretId: secretId,\n  SecretKey: secretKey,\n});\n\n\nexport function getFiles() {\n  return new Promise((resolve, reject) => {\n    cos.getBucket({\n      Bucket: bucket,\n      Region: region,\n    }, function (err, data) {\n      let fileList =[];\n\n      if (!err && Array.isArray(data.Contents)) {\n        for (let i = 0; i < data.Contents.length; i++) {\n          let item = data.Contents[i];\n          let path = item.Key;\n          forward(fileList , path , path);\n        }\n        resolve(fileList);\n\n      }else{\n        reject(err);\n      }\n\n    });\n  });\n\n}\n\n\nfunction forward(files, path , source ){\n  if(!path) return;\n  const idx = path.indexOf('/');\n\n  if(idx>-1){ // 文件夹\n    const folderName = path.slice(0,idx);\n    const rear = path.slice(idx+1);\n    const file = files.find(item => item.label === folderName );\n    if( file && ('children' in file)){\n      forward(file.children , rear , source);\n    }else{\n      const fi =  {\n        label:folderName,\n        path:source.split('/').filter(item=>!!item).join('/'),\n        children:[],\n      };\n      files.push(fi);\n      forward(fi.children , rear , source);\n    }\n  }else{\n    const file = {\n      label:path,\n      path:basePath+encodeURI(source),\n    };\n    files.push(file);\n  }\n}\n\n\n\nexport function bulidBookMap(bookList){\n\n  const bookMap = {\n\n  }\n\n  _bulidBookMap(bookList , bookMap)\n\n  return bookMap;\n\n\n}\n\nfunction _bulidBookMap(bookList , bookMap){\n\n  if(Array.isArray(bookList)){\n    bookList.forEach(item => _bulidBookMap(item, bookMap))\n  }else{\n    bookMap[bookList.path] = bookList;\n    if(Array.isArray(bookList.children)){\n      _bulidBookMap(bookList.children, bookMap)\n    }\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { getFiles , bulidBookMap } from './common/bookUtils'\nimport { Provider } from './common/context'\n\n\n\n\n\ngetFiles().then(item=>{\n    const bookMap = bulidBookMap(item);\n    const Root = (\n        <Provider value={{bookList:item , bookMap}}>\n            <App  />\n        </Provider>\n    )\n    ReactDOM.render(Root, document.getElementById('root'));\n})\n\n\n"],"sourceRoot":""}